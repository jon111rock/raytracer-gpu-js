.display {
  max-width: 1300px;
}

/* General styling for the collapsible section */
.sphere-panel {
  border: 1px solid #ddd; /* Light border */
  border-radius: 4px;
  margin-bottom: 1rem;
  background-color: #f9f9f9; /* Slightly off-white background */
  overflow: hidden; /* Ensure border-radius clips content */
}

.sphere-panel summary {
  padding: 0.75rem 1rem;
  font-weight: bold;
  cursor: pointer;
  background-color: #eee; /* Header background */
  outline: none; /* Remove default focus outline */
  list-style: none; /* Remove default marker */
  transition: background-color 0.2s ease-in-out;
}

.sphere-panel summary::-webkit-details-marker {
  display: none; /* Hide default marker in Chrome/Safari */
}

.sphere-panel summary::before {
 /* Add a custom triangle marker */
  content: '▶';
  margin-right: 0.5rem;
  display: inline-block;
  transition: transform 0.2s ease-in-out;
}

.sphere-panel[open] summary::before {
  transform: rotate(90deg);
}


.sphere-panel[open] summary {
   background-color: #e0e0e0; /* Darker background when open */
   border-bottom: 1px solid #ddd;
}

/* Container for all attribute groups */
.attribute-list {
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem; /* Space between attribute groups */
}

/* Grouping for related controls (e.g., Position, Color) */
.attribute-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem; /* Space between items within a group */
}

.attribute-group h4 {
  margin: 0 0 0.5rem 0;
  font-size: 0.9em;
  color: #333;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.25rem;
}

/* Individual control item (label, slider, number input) */
.attribute-item {
  display: flex;
  align-items: center;
  gap: 0.5rem; /* Space between label, slider, input */
}

.attribute-item label {
  min-width: 30px; /* Ensure labels align nicely */
  font-size: 0.85em;
  color: #555;
  text-align: right;
}

/* Slider styling */
.attribute-item input[type="range"] {
  flex-grow: 1; /* Allow slider to take up available space */
  cursor: pointer;
  height: 6px; /* Adjust height */
  appearance: none; /* Override default look */
  background: #ddd; /* Track color */
  border-radius: 3px;
  outline: none;
}

/* Thumb (the draggable part) styling for WebKit (Chrome, Safari) */
.attribute-item input[type="range"]::-webkit-slider-thumb {
  appearance: none;
  width: 14px;
  height: 14px;
  background: #666; /* Thumb color */
  border-radius: 50%;
  cursor: pointer;
}

/* Thumb styling for Firefox */
.attribute-item input[type="range"]::-moz-range-thumb {
  width: 14px;
  height: 14px;
  background: #666;
  border-radius: 50%;
  cursor: pointer;
  border: none; /* Remove default border */
}


/* Number input styling */
.attribute-item input[type="number"] {
  width: 60px; /* Fixed width for number inputs */
  padding: 0.25rem 0.4rem;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 0.9em;
  text-align: right;
   /* Optional: Hide the spinners */
  -moz-appearance: textfield;
}

.attribute-item input[type="number"]::-webkit-outer-spin-button,
.attribute-item input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* General styling for the collapsible section */
.camera-panel { /* Use specific class */
  border: 1px solid #ddd;
  border-radius: 4px;
  margin-bottom: 1rem;
  background-color: #f9f9f9;
  overflow: hidden;
}

.camera-panel summary {
  padding: 0.75rem 1rem;
  font-weight: bold;
  cursor: pointer;
  background-color: #eee;
  outline: none;
  list-style: none;
  transition: background-color 0.2s ease-in-out;
}

.camera-panel summary::-webkit-details-marker {
  display: none;
}

.camera-panel summary::before {
  content: '▶';
  margin-right: 0.5rem;
  display: inline-block;
  transition: transform 0.2s ease-in-out;
}

.camera-panel[open] summary::before {
  transform: rotate(90deg);
}


.camera-panel[open] summary {
   background-color: #e0e0e0;
   border-bottom: 1px solid #ddd;
}

/* Container for all attribute groups (reusing class name is fine) */
.camera-panel .attribute-list { /* Scope to camera-panel if needed */
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Grouping for related controls (reusing class name is fine) */
.camera-panel .attribute-group { /* Scope to camera-panel if needed */
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.camera-panel .attribute-group h4 { /* Scope to camera-panel if needed */
  margin: 0 0 0.5rem 0;
  font-size: 0.9em;
  color: #333;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.25rem;
}

/* Individual control item (reusing class name is fine) */
.camera-panel .attribute-item { /* Scope to camera-panel if needed */
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.camera-panel .attribute-item label { /* Scope to camera-panel if needed */
  min-width: 30px; /* Adjusted min-width for potentially longer labels like FOV */
  font-size: 0.85em;
  color: #555;
  text-align: right;
}

/* Slider styling (reusing class name is fine) */
.camera-panel .attribute-item input[type="range"] { /* Scope */
  flex-grow: 1;
  cursor: pointer;
  height: 6px;
  appearance: none;
  background: #ddd;
  border-radius: 3px;
  outline: none;
}

/* Thumb styling for WebKit */
.camera-panel .attribute-item input[type="range"]::-webkit-slider-thumb { /* Scope */
  appearance: none;
  width: 14px;
  height: 14px;
  background: #666;
  border-radius: 50%;
  cursor: pointer;
}

/* Thumb styling for Firefox */
.camera-panel .attribute-item input[type="range"]::-moz-range-thumb { /* Scope */
  width: 14px;
  height: 14px;
  background: #666;
  border-radius: 50%;
  cursor: pointer;
  border: none;
}


/* Number input styling (reusing class name is fine) */
.camera-panel .attribute-item input[type="number"] { /* Scope */
  width: 60px;
  padding: 0.25rem 0.4rem;
  border: 1px solid #ccc;
  border-radius: 3px;
  font-size: 0.9em;
  text-align: right;
  -moz-appearance: textfield;
}

.camera-panel .attribute-item input[type="number"]::-webkit-outer-spin-button,
.camera-panel .attribute-item input[type="number"]::-webkit-inner-spin-button { /* Scope */
  -webkit-appearance: none;
  margin: 0;
}

.control {
  /* Padding is now handled by App.css */
  /* padding: 1rem 0; */
}

/* Control panel */
.control-list {
  list-style: none;
  /* Remove horizontal flex layout */
  /* display: flex; */
  /* gap: 3rem; */
  padding: 0; /* Remove default ul padding */
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body, html, #root {
  height: 100%; /* Ensure root elements take full height */
  overflow: hidden; /* Prevent body scroll */
}

/* input {
  width: 3rem;
} */

.container {
  display: flex; /* Use Flexbox for side-by-side layout */
  height: 100vh; /* Make container take full viewport height */
  /* Remove grid properties */
  /* grid-template-columns: 1fr; */
  /* justify-items: center; */
}

/* Panel styling - defined in Panel/index.css or here */
/* Let's define basic layout here for clarity */
.control { /* Assuming Panel renders a div with className='control' */
  flex-basis: 350px; /* Set a fixed width for the panel */
  flex-shrink: 0; /* Prevent panel from shrinking */
  height: 100vh; /* Make panel take full height */
  overflow-y: auto; /* Enable vertical scrolling within the panel */
  padding: 1rem; /* Add some padding */
  border-right: 1px solid #ccc; /* Optional separator */
  background-color: #f8f8f8; /* Light background for panel */
}

/* Renderer styling - defined in Renderer/index.css or here */
/* Let's define basic layout here */
.display { /* Assuming Renderer renders a div with className='display' */
  flex-grow: 1; /* Allow renderer to take remaining space */
  height: 100vh; /* Make renderer take full height */
  overflow: hidden; /* Prevent renderer itself from scrolling */
  display: flex; /* Center the canvas if needed */
  justify-content: center;
  align-items: center;
  background-color: #333; /* Dark background for contrast */
}

/* Target the canvas container inside Renderer */
.display #render {
  width: 100%; /* Or set specific dimensions */
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.display #render canvas {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* Ensure canvas scales correctly */
}

